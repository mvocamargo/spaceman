/*
=======================================================
Mixins
=======================================================
1. Breakpoints
2. Colors
3. Container
4. Grid
5. Assets URL
6. Font-Face
7. Spacing
8. Utilities
=======================================================
*/

/*
-------------------------------------------------------
1. Breakpoints
-------------------------------------------------------
*/

@function breakpoint($key) {
  @return map-get($breakpoints, $key);
}

@mixin media-breakpoint($size, $property: min) {
  $breakpoint: breakpoint($size);

  @if $breakpoint {
    $size: $breakpoint;
  }

  @if $property == max {
    $size: $size - 1;
  }

  @media (#{$property}-width: $size) {
    @content;
  }
}

/*
-------------------------------------------------------
2. Colors
-------------------------------------------------------
*/

@function color($key) {
  @return map-get($colors, $key);
}

/*
-------------------------------------------------------
3. Container
-------------------------------------------------------
*/

@mixin container($size) {
  max-width: #{$size};
  margin: 0 auto;
}

/*
-------------------------------------------------------
4. Grid
-------------------------------------------------------
*/

@function column($columnSize, $gridSize) {
  @return $columnSize / $gridSize * 100%;
}

@mixin grid($name, $cols: 12) {
  @for $i from 1 through $cols {
    .#{$name}-#{$i} {
      width: column($i, $cols);
    }
  }
}

/*
-------------------------------------------------------
5. Assets URL
-------------------------------------------------------
*/

@function assetsURL($path, $file) {
  @return url($assets-base-path + '/' + $path + '/' + $file);
}

@function fonts($file) {
  @return assetsURL('fonts', $file);
}

@function img($file) {
  @return assetsURL('img', $file);
}

@function svg($file) {
  @return assetsURL('svg', $file);
}

/*
-------------------------------------------------------
6. Font-Face
-------------------------------------------------------
*/

@mixin font-face($family, $directory, $file, $weight) {
  $url: fonts($directory + '/' + $file);

  @font-face {
    font-family: #{$family};
    src: url('#{$url}.eot');
    src:
      url('#{$url}.eot') format('embedded-opentype'),
      url('#{$url}.woff2') format('woff2'),
      url('#{$url}.woff') format('woff'),
      url('#{$url}.ttf') format('truetype'),
      url('#{$url}.svg##{$file}') format('svg');
    font-weight: #{$weight};
  }

  .#{$file} {
    font-family: #{$family};
    font-weight: #{$weight};
  }
}

/*
-------------------------------------------------------
7. Spacing
-------------------------------------------------------
*/

@mixin spacing($name, $property, $zero: false) {
  $i: 5;

  @while $i < 35 {
    $result: $i/10;
    $result: #{$result}em;
    $class: #{$name}-#{$i};

    @if $zero == true {
      $result: #{$result} 0;
    }

    @if $i < 10 {
      $class: #{$name}-0#{$i};
    }

    .#{$class} {
      #{$property}: #{$result};
    }

    $i: $i + 5;
  }
}

/*
-------------------------------------------------------
8. Utilities
-------------------------------------------------------
*/

@mixin vcenter {
  display: inline-block;
  vertical-align: middle;
}

@mixin hideElement {
  top: -9999px;
  left: -9999px;
  position: absolute;
  visibility: hidden;
}

@mixin showElement {
  top: 0;
  left: 0;
  position: static;
  visibility: inherit;
}
