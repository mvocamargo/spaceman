{"version":3,"sources":["components/navbar.js"],"names":["doc","win","navBars","querySelectorAll","Array","prototype","forEach","call","nav","screenCover","body","isAnimating","isActive","navBtn","querySelector","parentItem","animationEvents","toggleExpanded","element","ariaExpanded","getAttribute","setAttribute","toggleNavigation","classList","contains","add","toggle","animationEvent","addEventListener","remove","removeChild","createElement","className","onclick","appendChild","toggleScroll","eventType","event","type","key","keyCode","target","activeItems","closeActiveItem","activeItem","indexOf","activeNav","browserWidth","innerWidth","exceptions","activeElement","link","preventDefault","document","window"],"mappings":"cAIC,SAAUA,EAAKC,GAGd,IAAMC,EAAUF,EAAIG,iBAAiB,WACrCC,MAAMC,UAAUC,QAAQC,KAAKL,EAAS,SAACM,GACrC,IAAIC,OAAAA,EACEC,EAAOV,EAAIU,KAEXC,EAAc,eACdC,EAAW,YACXC,EAASL,EAAIM,cAAc,eAC3BC,EAAaP,EAAIL,iBAAiB,2BAClCa,EAAkB,CAAC,qBAAsB,gBAiBzCC,EAAiB,SAACC,GACtB,IAAMC,EAAeD,EAAQE,aAAa,iBAC1CF,EAAQG,aAAa,gBAAiC,SAAhBF,EAA0B,OAAS,UAGrEG,EAAmB,WACnBd,EAAIe,UAAUC,SAASb,KAC3BH,EAAIe,UAAUE,IAAId,GAClBH,EAAIe,UAAUG,OAAOd,GACrBI,EAAgBV,QAAQ,SAACqB,GACvBnB,EAAIoB,iBAAiBD,EAAgB,WAAA,OAAMnB,EAAIe,UAAUM,OAAOlB,OAzB/C,WAEnB,GADAD,EAAKa,UAAUG,OAAO,qBAClBlB,EAAIgB,SAASf,GAKf,OAJAA,EAAYc,UAAUE,IAAI,yBAC1BT,EAAgBV,QAAQ,SAACqB,GACvBlB,EAAYmB,iBAAiBD,EAAgB,WAAA,OAAMnB,EAAIsB,YAAYrB,QAIvEA,EAAcT,EAAI+B,cAAc,QACpBC,UAAY,eACxBvB,EAAYwB,QAAU,aACtBzB,EAAI0B,YAAYzB,GAehB0B,KAYF,CAAC,QAAS,SAAS7B,QAAQ,SAAC8B,GAC1BpC,EAAI4B,iBAAiBQ,EAAW,SAACC,GAC/B,IAAMC,EAAOD,EAAMC,KACbC,EAAMF,EAAMG,QACZC,EAASJ,EAAMI,OACfC,EAAclC,EAAIL,iBAAiB,IAAMS,GACzC+B,EAAkB,SAACC,GACvBA,EAAWrB,UAAUM,OAAOjB,GAC5BK,EAAe2B,EAAW9B,cAAc,OAE9B,SAARwB,IAA6D,GAA1C,CAACzB,EAAQJ,GAAaoC,QAAQJ,IACnDnB,IAEFlB,MAAMC,UAAUC,QAAQC,KAAKmC,EAAa,SAACE,GACzC,GAAY,SAARN,IAAoBM,EAAWpB,SAASiB,GAAS,CACnD,IAAMK,EAAYtC,EAAIgB,SAASf,GACzBsC,EAAe9C,EAAI+C,WACrBC,EAAa,CACfzC,EAAIM,cAAc,SAClBL,EACAI,GAEFoC,GAA4C,GAA/BA,EAAWJ,QAAQJ,IApErB,IAqEPM,GAA6BA,GArEtB,KAqEoDE,GAAcH,IAC3EH,EAAgBC,GAGR,SAARN,IACS,IAAPC,GAAoB,GAAPA,IAAaK,EAAWpB,SAASxB,EAAIkD,iBACpDP,EAAgBC,SAO1BxC,MAAMC,UAAUC,QAAQC,KAAKQ,EAAY,SAACG,GA7CpB,IAACA,EACfiC,GAAAA,GADejC,EA6C6CA,GA5C7CJ,cAAc,MAC9Bc,iBAAiB,QAAS,SAACS,GAC9BA,EAAMe,iBACNlC,EAAQK,UAAUG,OAAOd,GACzBK,EAAekC,SAjDtB,CA4FCE,SAAUC","file":"main.js","sourcesContent":["/* =====================================================================\r\n * MAIN NAVIGATION\r\n * ===================================================================*/\r\n\r\n(function (doc, win) {\r\n  'use strict';\r\n\r\n  const navBars = doc.querySelectorAll('.navBar');\r\n  Array.prototype.forEach.call(navBars, (nav) => {\r\n    let screenCover;\r\n    const body = doc.body;\r\n    const breakpoint = 839;\r\n    const isAnimating = 'is-animating';\r\n    const isActive = 'is-active';\r\n    const navBtn = nav.querySelector('.navBar-btn');\r\n    const parentItem = nav.querySelectorAll('.menu-item-has-children');\r\n    const animationEvents = ['webkitAnimationEnd', 'animationend'];\r\n\r\n    const toggleScroll = () => {\r\n      body.classList.toggle('nav-hide-overflow');\r\n      if (nav.contains(screenCover)) {\r\n        screenCover.classList.add('screen-cover-fade-out');\r\n        animationEvents.forEach((animationEvent) => {\r\n          screenCover.addEventListener(animationEvent, () => nav.removeChild(screenCover));\r\n        });\r\n        return;\r\n      }\r\n      screenCover = doc.createElement('div');\r\n      screenCover.className = 'screen-cover';\r\n      screenCover.onclick = () => {};\r\n      nav.appendChild(screenCover);\r\n    };\r\n\r\n    const toggleExpanded = (element) => {\r\n      const ariaExpanded = element.getAttribute('aria-expanded');\r\n      element.setAttribute('aria-expanded', ariaExpanded == 'false' ? 'true' : 'false');\r\n    };\r\n\r\n    const toggleNavigation = () => {\r\n      if (nav.classList.contains(isAnimating)) return;\r\n      nav.classList.add(isAnimating);\r\n      nav.classList.toggle(isActive);\r\n      animationEvents.forEach((animationEvent) => {\r\n        nav.addEventListener(animationEvent, () => nav.classList.remove(isAnimating));\r\n      });\r\n      toggleScroll();\r\n    };\r\n\r\n    const toggleSubmenu = (element) => {\r\n      const link = element.querySelector('a');\r\n      link.addEventListener('click', (event) => {\r\n        event.preventDefault();\r\n        element.classList.toggle(isActive);\r\n        toggleExpanded(link);\r\n      });\r\n    };\r\n\r\n    ['click', 'keyup'].forEach((eventType) => {\r\n      doc.addEventListener(eventType, (event) => {\r\n        const type = event.type;\r\n        const key = event.keyCode;\r\n        const target = event.target;\r\n        const activeItems = nav.querySelectorAll('.' + isActive);\r\n        const closeActiveItem = (activeItem) => {\r\n          activeItem.classList.remove(isActive);\r\n          toggleExpanded(activeItem.querySelector('a'));\r\n        };\r\n        if (type == 'click' && [navBtn, screenCover].indexOf(target) != -1) {\r\n          toggleNavigation();\r\n        }\r\n        Array.prototype.forEach.call(activeItems, (activeItem) => {\r\n          if (type == 'click' && !activeItem.contains(target)) {\r\n            const activeNav = nav.contains(screenCover);\r\n            const browserWidth = win.innerWidth;\r\n            let exceptions = [\r\n              nav.querySelector('.menu'),\r\n              screenCover,\r\n              navBtn\r\n            ];\r\n            exceptions = exceptions.indexOf(target) == -1;\r\n            if (browserWidth > breakpoint || browserWidth <= breakpoint && exceptions && activeNav) {\r\n              closeActiveItem(activeItem);\r\n            }\r\n          }\r\n          if (type == 'keyup') {\r\n            if (key == 27 || key == 9 && !activeItem.contains(doc.activeElement)) {\r\n              closeActiveItem(activeItem);\r\n            }\r\n          }\r\n        });\r\n      });\r\n    });\r\n\r\n    Array.prototype.forEach.call(parentItem, (element) => toggleSubmenu(element));\r\n  });\r\n\r\n}(document, window));\r\n"]}