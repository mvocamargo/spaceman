{"version":3,"sources":["navigation.js"],"names":["doc","win","nav","querySelector","screenCover","body","navAnimate","itemIsActive","navBtn","parentItem","querySelectorAll","animationEvents","toggleExpanded","element","ariaExpanded","getAttribute","setAttribute","toggleNavigation","classList","contains","add","toggle","forEach","animationEvent","addEventListener","remove","removeChild","createElement","className","onclick","appendChild","toggleScroll","eventType","event","type","key","keyCode","target","activeItems","closeActiveItem","activeItem","indexOf","Array","prototype","call","activeNav","browserWidth","innerWidth","exceptions","activeElement","link","preventDefault","document","window"],"mappings":"cAIC,SAAUA,EAAKC,GAGd,IAAMC,EAAMF,EAAIG,cAAc,aAC9B,GAAKD,EAAL,CAEA,IAAIE,OAAAA,EACEC,EAAOL,EAAIK,KAEXC,EAAa,cAEbC,EAAe,sBACfC,EAASN,EAAIC,cAAc,YAC3BM,EAAaP,EAAIQ,iBAAiB,2BAClCC,EAAkB,CAAC,qBAAsB,gBAiBzCC,EAAiB,SAACC,GACtB,IAAMC,EAAeD,EAAQE,aAAa,iBAC1CF,EAAQG,aAAa,gBAAiC,SAAhBF,EAA0B,OAAS,UAGrEG,EAAmB,WACnBf,EAAIgB,UAAUC,SAASb,KAC3BJ,EAAIgB,UAAUE,IAAId,GAClBJ,EAAIgB,UAAUG,OA7BI,sBA8BlBV,EAAgBW,QAAQ,SAACC,GACvBrB,EAAIsB,iBAAiBD,EAAgB,WAAA,OAAMrB,EAAIgB,UAAUO,OAAOnB,OAzB/C,WAEnB,GADAD,EAAKa,UAAUG,OAAO,qBAClBnB,EAAIiB,SAASf,GAKf,OAJAA,EAAYc,UAAUE,IAAI,yBAC1BT,EAAgBW,QAAQ,SAACC,GACvBnB,EAAYoB,iBAAiBD,EAAgB,WAAA,OAAMrB,EAAIwB,YAAYtB,QAIvEA,EAAcJ,EAAI2B,cAAc,QACpBC,UAAY,eACxBxB,EAAYyB,QAAU,aACtB3B,EAAI4B,YAAY1B,GAehB2B,KAYF,CAAC,QAAS,SAAST,QAAQ,SAACU,GAC1BhC,EAAIwB,iBAAiBQ,EAAW,SAACC,GAC/B,IAAMC,EAAOD,EAAMC,KACbC,EAAMF,EAAMG,QACZC,EAASJ,EAAMI,OACfC,EAAcpC,EAAIQ,iBAAiB,IAAMH,GACzCgC,EAAkB,SAACC,GACvBA,EAAWtB,UAAUO,OAAOlB,GAC5BK,EAAe4B,EAAWrC,cAAc,OAE9B,SAAR+B,IAA6D,GAA1C,CAAC1B,EAAQJ,GAAaqC,QAAQJ,IACnDpB,IAEFyB,MAAMC,UAAUrB,QAAQsB,KAAKN,EAAa,SAACE,GACzC,GAAY,SAARN,IAAoBM,EAAWrB,SAASkB,GAAS,CACnD,IAAMQ,EAAY3C,EAAIiB,SAASf,GACzB0C,EAAe7C,EAAI8C,WACrBC,EAAa,CACf9C,EAAIC,cAAc,SAClBC,EACAI,GAEFwC,GAA4C,GAA/BA,EAAWP,QAAQJ,IArErB,IAsEPS,GAA6BA,GAtEtB,KAsEoDE,GAAcH,IAC3EN,EAAgBC,GAGR,SAARN,IACS,IAAPC,GAAoB,GAAPA,IAAaK,EAAWrB,SAASnB,EAAIiD,iBACpDV,EAAgBC,SAO1BE,MAAMC,UAAUrB,QAAQsB,KAAKnC,EAAY,SAACI,GA7CpB,IAACA,EACfqC,GAAAA,GADerC,EA6C6CA,GA5C7CV,cAAc,MAC9BqB,iBAAiB,QAAS,SAACS,GAC9BA,EAAMkB,iBACNtC,EAAQK,UAAUG,OAAOd,GACzBK,EAAesC,QAnDpB,CA6FCE,SAAUC","file":"main.js","sourcesContent":["/* =====================================================================\r\n * MAIN NAVIGATION\r\n * ===================================================================*/\r\n\r\n(function (doc, win) {\r\n  'use strict';\r\n\r\n  const nav = doc.querySelector('.main-nav');\r\n  if (!nav) return;\r\n\r\n  let screenCover;\r\n  const body = doc.body;\r\n  const breakpoint = 839;\r\n  const navAnimate = 'nav-animate';\r\n  const navIsActive = 'main-nav-is-active';\r\n  const itemIsActive = 'menu-item-is-active';\r\n  const navBtn = nav.querySelector('.nav-btn');\r\n  const parentItem = nav.querySelectorAll('.menu-item-has-children');\r\n  const animationEvents = ['webkitAnimationEnd', 'animationend'];\r\n\r\n  const toggleScroll = () => {\r\n    body.classList.toggle('nav-hide-overflow');\r\n    if (nav.contains(screenCover)) {\r\n      screenCover.classList.add('screen-cover-fade-out');\r\n      animationEvents.forEach((animationEvent) => {\r\n        screenCover.addEventListener(animationEvent, () => nav.removeChild(screenCover));\r\n      });\r\n      return;\r\n    }\r\n    screenCover = doc.createElement('div');\r\n    screenCover.className = 'screen-cover';\r\n    screenCover.onclick = () => {};\r\n    nav.appendChild(screenCover);\r\n  };\r\n\r\n  const toggleExpanded = (element) => {\r\n    const ariaExpanded = element.getAttribute('aria-expanded');\r\n    element.setAttribute('aria-expanded', ariaExpanded == 'false' ? 'true' : 'false');\r\n  };\r\n\r\n  const toggleNavigation = () => {\r\n    if (nav.classList.contains(navAnimate)) return;\r\n    nav.classList.add(navAnimate);\r\n    nav.classList.toggle(navIsActive);\r\n    animationEvents.forEach((animationEvent) => {\r\n      nav.addEventListener(animationEvent, () => nav.classList.remove(navAnimate));\r\n    });\r\n    toggleScroll();\r\n  };\r\n\r\n  const toggleSubmenu = (element) => {\r\n    const link = element.querySelector('a');\r\n    link.addEventListener('click', (event) => {\r\n      event.preventDefault();\r\n      element.classList.toggle(itemIsActive);\r\n      toggleExpanded(link);\r\n    });\r\n  };\r\n\r\n  ['click', 'keyup'].forEach((eventType) => {\r\n    doc.addEventListener(eventType, (event) => {\r\n      const type = event.type;\r\n      const key = event.keyCode;\r\n      const target = event.target;\r\n      const activeItems = nav.querySelectorAll('.' + itemIsActive);\r\n      const closeActiveItem = (activeItem) => {\r\n        activeItem.classList.remove(itemIsActive);\r\n        toggleExpanded(activeItem.querySelector('a'));\r\n      };\r\n      if (type == 'click' && [navBtn, screenCover].indexOf(target) != -1) {\r\n        toggleNavigation();\r\n      }\r\n      Array.prototype.forEach.call(activeItems, (activeItem) => {\r\n        if (type == 'click' && !activeItem.contains(target)) {\r\n          const activeNav = nav.contains(screenCover);\r\n          const browserWidth = win.innerWidth;\r\n          let exceptions = [\r\n            nav.querySelector('.menu'),\r\n            screenCover,\r\n            navBtn\r\n          ];\r\n          exceptions = exceptions.indexOf(target) == -1;\r\n          if (browserWidth > breakpoint || browserWidth <= breakpoint && exceptions && activeNav) {\r\n            closeActiveItem(activeItem);\r\n          }\r\n        }\r\n        if (type == 'keyup') {\r\n          if (key == 27 || key == 9 && !activeItem.contains(doc.activeElement)) {\r\n            closeActiveItem(activeItem);\r\n          }\r\n        }\r\n      });\r\n    });\r\n  });\r\n\r\n  Array.prototype.forEach.call(parentItem, (element) => toggleSubmenu(element));\r\n\r\n}(document, window));\r\n"]}