{"version":3,"sources":["components/navbar.js"],"names":["doc","win","navBar","querySelector","isActive","isAnimating","toggleClass","animationEvents","toggleExpanded","element","ariaExpanded","getAttribute","setAttribute","getActiveItems","context","querySelectorAll","disableActiveItems","Array","prototype","forEach","call","parentNode","activeItem","toggleSubmenu","classList","toggle","firstElementChild","addEventListener","event","target","targetParent","contains","body","add","overlayClass","navOverlay","animationEvent","remove","removeChild","newOverlay","createElement","className","join","onclick","appendChild","triggers","trigger","toggleNavbar","preventDefault","innerWidth","key","keyCode","document","window"],"mappings":"cASC,SAAUA,EAAKC,GAGd,IAAMC,EAASF,EAAIG,cAAc,WACjC,GAAKD,EAAL,CAEA,IAAME,EAAW,YACXC,EAAc,eACdC,EAAc,gBACdC,EAAkB,CAAC,qBAAsB,gBAMzCC,EAAiB,SAACC,GACtB,IAAMC,EAAeD,EAAQE,aAAa,iBACrCD,GACLD,EAAQG,aAAa,gBAAiC,SAAhBF,EAA0B,OAAS,UAGrEG,EAAiB,SAACC,GACtB,OAAOA,EAAQC,iBAAiB,IAAMX,IAGlCY,EAAqB,SAACP,GAC1BQ,MAAMC,UAAUC,QAAQC,KAAKP,EAAeJ,EAAQY,YAAa,SAACC,GAC5DA,GAAcb,GAChBc,EAAcD,MAyCdC,EAAgB,SAACd,GACrBA,EAAQe,UAAUC,OAAOrB,GACzBI,EAAeC,EAAQiB,oBAOzB1B,EAAI2B,iBAAiB,QAAS,SAACC,GAC7B,IAAMC,EAASD,EAAMC,OACfC,EAAeD,EAAOR,WAM5B,GAJIQ,EAAOL,UAAUO,SAASzB,IA7CX,WACnB,IAAIJ,EAAOsB,UAAUO,SAAS1B,GAA9B,CAEAL,EAAIgC,KAAKR,UAAUC,OAAO,wBAC1BvB,EAAOsB,UAAUS,IAAI5B,GACrBH,EAAOsB,UAAUC,OAAOrB,GAExB,IAAM8B,EAAe,iBACfC,EAAajC,EAAOC,cAAc,IAAM+B,GAS9C,GAPA3B,EAAgBY,QAAQ,SAACiB,GACvBlC,EAAOyB,iBAAiBS,EAAgB,WAAA,OAAMlC,EAAOsB,UAAUa,OAAOhC,KAClE8B,GACFA,EAAWR,iBAAiBS,EAAgB,WAAA,OAAMlC,EAAOoC,YAAYH,QAIpEA,EAAY,CACf,IAAMI,EAAavC,EAAIwC,cAAc,OACrCD,EAAWE,UAAY,CAACP,EAAc5B,GAAaoC,KAAK,KACxDH,EAAWI,QAAU,aACrBzC,EAAO0C,YAAYL,GAGrB,IAAMM,EAAW7C,EAAIe,iBAAiB,IAAMT,GAC5CW,MAAMC,UAAUC,QAAQC,KAAKyB,EAAU,SAACC,GAAD,OAAatC,EAAesC,MAqBjEC,GAGEjB,EAAaN,UAAUO,SAAS,gCAIlC,OAHAH,EAAMoB,iBACNzB,EAAcO,QACdd,EAAmBc,GAIjB7B,EAAIgD,WAAa,KACrBjC,EAAmBd,KAOrBF,EAAI2B,iBAAiB,QAAS,SAACC,GAC7B,IAAMsB,EAAMtB,EAAMuB,QAClBlC,MAAMC,UAAUC,QAAQC,KAAKP,EAAeX,GAAS,SAACoB,IACzC,IAAP4B,GAAoB,GAAPA,IAAa5B,EAAWS,SAASH,EAAMC,UACtDN,EAAcD,QAzGrB,CA6GC8B,SAAUC","file":"main.js","sourcesContent":["/* =====================================================================\r\n * Navbar\r\n * =====================================================================\r\n * 1. Helpers\r\n * 3. Toggle Submenu\r\n * 4. Event Listener: click\r\n * 5. Event Listener: keyup\r\n * ===================================================================*/\r\n\r\n(function (doc, win) {\r\n  'use strict';\r\n\r\n  const navBar = doc.querySelector('.navBar');\r\n  if (!navBar) return;\r\n\r\n  const isActive = 'is-active';\r\n  const isAnimating = 'is-animating';\r\n  const toggleClass = 'navBar-toggle';\r\n  const animationEvents = ['webkitAnimationEnd', 'animationend'];\r\n\r\n  /* ---------------------------------------------------------------------\r\n   * 1. Helpers\r\n   * -------------------------------------------------------------------*/\r\n\r\n  const toggleExpanded = (element) => {\r\n    const ariaExpanded = element.getAttribute('aria-expanded');\r\n    if (!ariaExpanded) return;\r\n    element.setAttribute('aria-expanded', ariaExpanded == 'false' ? 'true' : 'false');\r\n  };\r\n\r\n  const getActiveItems = (context) => {\r\n    return context.querySelectorAll('.' + isActive);\r\n  };\r\n\r\n  const disableActiveItems = (element) => {\r\n    Array.prototype.forEach.call(getActiveItems(element.parentNode), (activeItem) => {\r\n      if (activeItem != element) {\r\n        toggleSubmenu(activeItem);\r\n      }\r\n    });\r\n  };\r\n\r\n  /* ---------------------------------------------------------------------\r\n   * 2. Toggle Navbar\r\n   * -------------------------------------------------------------------*/\r\n\r\n  const toggleNavbar = () => {\r\n    if (navBar.classList.contains(isAnimating)) return;\r\n\r\n    doc.body.classList.toggle('navBar-disableScroll');\r\n    navBar.classList.add(isAnimating);\r\n    navBar.classList.toggle(isActive);\r\n\r\n    const overlayClass = 'navBar-overlay';\r\n    const navOverlay = navBar.querySelector('.' + overlayClass);\r\n\r\n    animationEvents.forEach((animationEvent) => {\r\n      navBar.addEventListener(animationEvent, () => navBar.classList.remove(isAnimating));\r\n      if (navOverlay) {\r\n        navOverlay.addEventListener(animationEvent, () => navBar.removeChild(navOverlay));\r\n      }\r\n    });\r\n\r\n    if (!navOverlay) {\r\n      const newOverlay = doc.createElement('div');\r\n      newOverlay.className = [overlayClass, toggleClass].join(' ');\r\n      newOverlay.onclick = () => {};\r\n      navBar.appendChild(newOverlay);\r\n    }\r\n\r\n    const triggers = doc.querySelectorAll('.' + toggleClass);\r\n    Array.prototype.forEach.call(triggers, (trigger) => toggleExpanded(trigger));\r\n  };\r\n\r\n  /* ---------------------------------------------------------------------\r\n   * 3. Toggle Submenu\r\n   * -------------------------------------------------------------------*/\r\n\r\n  const toggleSubmenu = (element) => {\r\n    element.classList.toggle(isActive);\r\n    toggleExpanded(element.firstElementChild);\r\n  };\r\n\r\n  /* ---------------------------------------------------------------------\r\n   * 4. Event Listener: click\r\n   * -------------------------------------------------------------------*/\r\n\r\n  doc.addEventListener('click', (event) => {\r\n    const target = event.target;\r\n    const targetParent = target.parentNode;\r\n\r\n    if (target.classList.contains(toggleClass)) {\r\n      toggleNavbar();\r\n    }\r\n\r\n    if (targetParent.classList.contains('navBar-menuItem--hasChildren')) {\r\n      event.preventDefault();\r\n      toggleSubmenu(targetParent);\r\n      disableActiveItems(targetParent);\r\n      return;\r\n    }\r\n\r\n    if (win.innerWidth < 840) return;\r\n    disableActiveItems(navBar);\r\n  });\r\n\r\n  /* ---------------------------------------------------------------------\r\n   * 5. Event Listener: keyup\r\n   * -------------------------------------------------------------------*/\r\n\r\n  doc.addEventListener('keyup', (event) => {\r\n    const key = event.keyCode;\r\n    Array.prototype.forEach.call(getActiveItems(navBar), (activeItem) => {\r\n      if (key == 27 || key == 9 && !activeItem.contains(event.target)) {\r\n        toggleSubmenu(activeItem);\r\n      }\r\n    });\r\n  });\r\n}(document, window));\r\n"]}